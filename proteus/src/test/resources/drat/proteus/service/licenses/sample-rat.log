
*****************************************************
Summary
-------
Generated at: 2017-07-29T17:10:42-07:00

Notes: 0
Binaries: 0
Archives: 0
Standards: 12

Apache Licensed: 2
Generated Documents: 0

JavaDocs are generated, thus a license header is optional.
Generated files do not require license headers.

8 Unknown Licenses

*****************************************************

Files with unapproved licenses:

  /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/4819c0134b20143ab9e5e5388c33fcf0-README.md
  /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/4c6c80630a1ea42303d015ca8153ec2d-README.md
  /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/82242fcc686f97db312f733ff2c914da-README.md
  /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/826eff522a572b7d1bc0df86a945bc8e-CONTRIBUTING.md
  /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/c8a69d1977bbe04d44462a9e98de7fc6-README.md
  /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/ebd586f9d3e9a0fe416e1bf0e2d5b81a-README.md
  /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/f240c690773715be31ab125bee9fb8c5-CONTRIBUTING.md
  /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/fd4342f0e1cc47ef3222d5db12807438-README.md

*****************************************************

*****************************************************
  Files with Apache License headers will be marked AL
  Binary files (which do not require any license headers) will be marked B
  Compressed archives will be marked A
  Notices, licenses etc. will be marked N
  AL    /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/421e7294043e0581cae0ced0bb35008b-LICENSE.md
 !????? /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/4819c0134b20143ab9e5e5388c33fcf0-README.md
 !????? /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/4c6c80630a1ea42303d015ca8153ec2d-README.md
  MIT   /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/61c9938c2576418a6de2a01002f6cd19-README.md
 !????? /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/82242fcc686f97db312f733ff2c914da-README.md
 !????? /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/826eff522a572b7d1bc0df86a945bc8e-CONTRIBUTING.md
 !????? /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/c8a69d1977bbe04d44462a9e98de7fc6-README.md
  MIT   /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/d54b61d46665f629220de71c2d85201c-README.md
  AL    /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/db6934b99687afc0427d80757583534e-LICENSE.md
 !????? /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/ebd586f9d3e9a0fe416e1bf0e2d5b81a-README.md
 !????? /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/f240c690773715be31ab125bee9fb8c5-CONTRIBUTING.md
 !????? /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/fd4342f0e1cc47ef3222d5db12807438-README.md
 
*****************************************************

 Printing headers for text files without a valid license header...
 
=====================================================
== File: /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/4819c0134b20143ab9e5e5388c33fcf0-README.md
=====================================================
# Data-Driven Documents

<a href="http://d3js.org"><img src="http://d3js.org/logo.svg" align="left" hspace="10" vspace="6"></a>

**D3.js** is a JavaScript library for manipulating documents based on data. **D3** helps you bring data to life using HTML, SVG and CSS. D3’s emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework, combining powerful visualization components and a data-driven approach to DOM manipulation.

Want to learn more? [See the wiki.](https://github.com/mbostock/d3/wiki)

For examples, [see the gallery](https://github.com/mbostock/d3/wiki/Gallery) and [mbostock’s bl.ocks](http://bl.ocks.org/mbostock).

=====================================================
== File: /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/4c6c80630a1ea42303d015ca8153ec2d-README.md
=====================================================
# Data-Driven Documents

<a href="https://d3js.org"><img src="https://d3js.org/logo.svg" align="left" hspace="10" vspace="6"></a>

**D3.js** is a JavaScript library for manipulating documents based on data. **D3** helps you bring data to life using HTML, SVG, and CSS. **D3** emphasizes web standards and combines powerful visualization components with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers without tying yourself to a proprietary framework.

Want to learn more? [See the wiki.](https://github.com/mbostock/d3/wiki)

For examples, [see the gallery](https://github.com/mbostock/d3/wiki/Gallery) and [mbostock’s bl.ocks](http://bl.ocks.org/mbostock).

=====================================================
== File: /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/82242fcc686f97db312f733ff2c914da-README.md
=====================================================
<link href="http://nvd3.org/src/nv.d3.css" rel="stylesheet">

##[Angular.js](http://angularjs.org/) Directives for [nvd3.js](http://www.nvd3.org), [d3.js](http://www.d3js.org) charts

[![Build Status](https://travis-ci.org/cmaurer/angularjs-nvd3-directives.png?branch=master)](https://travis-ci.org/cmaurer/angularjs-nvd3-directives)
[![Dependencies Status](https://david-dm.org/cmaurer/angularjs-nvd3-directives.png)](https://david-dm.org/cmaurer/angularjs-nvd3-directives#info=dependencies)
[![devDependency Status](https://david-dm.org/cmaurer/angularjs-nvd3-directives/dev-status.png)](https://david-dm.org/cmaurer/angularjs-nvd3-directives#info=devDependencies)
[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/cmaurer/angularjs-nvd3-directives/trend.png)](https://bitdeli.com/free "Bitdeli Badge")
[![Stories in Ready](https://badge.waffle.io/cmaurer/angularjs-nvd3-directives.png?label=ready)](https://waffle.io/cmaurer/angularjs-nvd3-directives)
[![Gitter chat](https://badges.gitter.im/cmaurer/angularjs-nvd3-directives.png)](https://gitter.im/cmaurer/angularjs-nvd3-directives)


![Line Charts](http://cmaurer.github.io/img/line.chart.png "Line Charts")

```html
<nvd3-line-chart
    data="exampleData"
    width="600"
    height="350"
    showXAxis="true"
    showYAxis="true"
    xAxisTickFormat="xAxisTickFormat_Date_Format()"
    yAxisTickFormat="yAxisFormatFunction()">
</nvd3-line-chart>
```

![Stacked Area Charts](http://cmaurer.github.io/img/stacked.area.png "Stacked Area Charts")

```html
<nvd3-stacked-area-chart
    data="exampleData"
    width="600"
    height="350"
    showXAxis="true"
    showYAxis="true"
    xAxisTickFormat="xAxisTickFormat()">
</nvd3-stacked-area-chart>
```

[More Examples](http://cmaurer.github.io/angularjs-nvd3-directives)


## Basic Quick Start 

### 1. Install Dependencies with [bower](http://bower.io/)

### Install [these](http://bower.io/#installing-bower) if you don't already have it.

#### [Angular.js](http://angularjs.org/)
    

=====================================================
== File: /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/826eff522a572b7d1bc0df86a945bc8e-CONTRIBUTING.md
=====================================================
# Contributing

**Important:** these GitHub issues are for *bug reports and feature requests only*. Please use [StackOverflow](http://stackoverflow.com/questions/tagged/d3.js) or the [d3-js Google group](https://groups.google.com/d/forum/d3-js) for general help.

If you’re looking for ways to contribute, please [peruse open issues](https://github.com/mbostock/d3/issues?milestone=&page=1&state=open). The icebox is a good place to find ideas that are not currently in development. If you already have an idea, please check past issues to see whether your idea or a similar one was previously discussed.

Before submitting a pull request, consider implementing a live example first, say using [bl.ocks.org](http://bl.ocks.org). Real-world use cases go a long way to demonstrating the usefulness of a proposed feature. The more complex a feature’s implementation, the more usefulness it should provide. Share your demo using the #d3js tag on Twitter or by sending it to the [d3-js Google group](https://groups.google.com/d/forum/d3-js).

If your proposed feature does not involve changing core functionality, consider submitting it instead as a [D3 plugin](https://github.com/d3/d3-plugins). New core features should be for general use, whereas plugins are suitable for more specialized use cases. When in doubt, it’s easier to start with a plugin before “graduating” to core.

To contribute new documentation or add examples to the gallery, just [edit the Wiki](https://github.com/mbostock/d3/wiki)!

## How to Submit a Pull Request

1. Click the “Fork” button to create your personal fork of the D3 repository.

2. After cloning your fork of the D3 repository in the terminal, run `npm install` to install D3’s dependencies.

3. Create a new branch for your new feature. For example: `git checkout -b my-awesome-feature`. A dedicated branch for your pull request means you can develop multiple features at the same time, and ensures that your pull request is stable even if you later decide to develop an unrelated feature.

4. The `d3.js` and `d3.min.js` files are built from source files in the `src` directory. _Do not edit `d3.js` directly._ Instead, edit the source files, and then run `make` to build the generated files.

5. Use `make test` to run tests and verify your changes. If you are adding a new feature, you should add new tests! If you are changing existing functionality, make sure the existing tests run, or update them as appropriate.

6. Sign D3’s [Individual Contributor License Agreement](https://docs.google.com/forms/d/1CzjdBKtDuA8WeuFJinadx956xLQ4Xriv7-oDvXnZMaI/viewform). Unless you are submitting a trivial patch (such as fixing a typo), this form is needed to verify that you are able to contribute.

7. Submit your pull request, and good luck!

=====================================================
== File: /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/c8a69d1977bbe04d44462a9e98de7fc6-README.md
=====================================================
# Angular-nvD3

[![Build Status](https://travis-ci.org/krispo/angular-nvd3.svg?branch=master)](https://travis-ci.org/krispo/angular-nvd3)
[![NPM Version](http://img.shields.io/npm/v/angular-nvd3.svg?style=flat)](https://www.npmjs.org/package/angular-nvd3)

This thing is designed to make it easier to work with [nvd3.js](https://github.com/novus/nvd3) re-usable charting library. This directive allows you to easily customize your charts via JSON API.

The key feature is that the original hierarchical structure of nvd3 models is completely preserved in directive JSON structure. This means that while you creating a complex chart that containing multiple elementary chart models (such as `line`, `bar`, `axis`, ...), you can in turn customize the properties of each internal elementary models as well as the global charting properties the way you want. This can be done as usual, but it becomes quite easily to customize while applying JSON approach to. 

Try it [online](http://krispo.github.io/angular-nvd3/).

## How to use

### Install

Install it via bower:

    $ bower install angular-nvd3
    
An [angular.js](https://angularjs.org/), [D3.js](http://d3js.org/) and [nvd3.js](http://nvd3.org/) would be installed as a dependency automatically. If it won't for some reason, install it manually:
    
    $ bower install angular
    $ bower install d3
    $ bower install nvd3

Add dependencies to the `<head>` section of your main html:
```html
<meta charset="utf-8">  <!-- it's important for d3.js -->
<script src="bower_components/angular/angular.js"></script>
<script src="bower_components/d3/d3.js"></script>
<script src="bower_components/nvd3/build/nv.d3.js"></script> <!-- or use another assembly -->
<script src="bower_components/angular-nvd3/dist/angular-nvd3.js"></script>
<link rel="stylesheet" href="bower_components/nvd3/build/nv.d3.css">
```

If you don't use bower, you can manually download and unpack directive the latest version ([zip](https://github.com/krispo/angular-nvd3/archive/v1.0.3.zip), [tar.gz](https://github.com/krispo/angular-nvd3/archive/v1.0.3.tar.gz)).

### Basic usage

Inject `nvd3` directive into angular module, set up some chart options and push some data to the controller:
```javascript
angular.module('myApp', ['nvd3'])
       .controller('myCtrl', function('$scope'){
           $scope.options = { /* JSON data */ };
           $scope.data = { /* JSON data */ }
        })
```

and in html again you can use it like:
```html

=====================================================
== File: /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/ebd586f9d3e9a0fe416e1bf0e2d5b81a-README.md
=====================================================
# NVD3 - v1.1.15-beta
## Release notes for version 1.1.15 beta
* Various fixes across the board

## Overview
A reusable chart library for d3.js.

NVD3 may change from its current state, but will always try to follow the style of d3.js.

You can also check out the [examples page](http://nvd3.org/ghpages/examples.html).
**Note:** The examples on nvd3.org are outdated.  For examples on how to use the latest NVD3, please checkout the **examples/** directory in the repository.

---

# Current development focus

- Getting documentation up.
- Unifying common API functions between charts.
- Bug fixes that come up.

---

# Installation Instructions

`d3.v3.js` is a dependency of `nv.d3.js`. Be sure to include in in your project, then:
Add a script tag to include `nv.d3.js` OR `nv.d3.min.js` in your project.
Also add a link to the `nv.d3.css` file.

See wiki -> Documentation for more detail

---

If one of [the existing models](https://github.com/novus/nvd3/tree/master/src/models) doesn't meet your needs, fork the project, implement the model and an example using it, send us a pull request, for consideration for inclusion in the project.

We cannot honor all pull requests, but we will review all of them.

Please do not aggregate pull requests. Aggregated pull requests are actually more difficult to review.

We are currently changing our branch structure so that master will be gauranteed stable. In addition, there is now a "development" branch. This branch reflects the latest changes to NVD3 and is not necessarily stable.

---

## Minifying your fork:

### Using Make
The Makefile requires [UglifyJS](https://github.com/mishoo/UglifyJS) and [CSSMin](https://github.com/jbleuzen/node-cssmin)

The easiest way to install UglifyJS and CSSMin is via npm. Run `npm install -g uglify-js cssmin`. After installing verify the setup by running `uglifyjs --version` and `cssmin --help`.

Once you have the `uglifyjs` and `cssmin` commands available, running `make` from your

=====================================================
== File: /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/f240c690773715be31ab125bee9fb8c5-CONTRIBUTING.md
=====================================================
# Contributing

If you’re looking for ways to contribute, please [peruse open issues](https://github.com/mbostock/d3/issues?milestone=&page=1&state=open). The icebox is a good place to find ideas that are not currently in development. If you already have an idea, please check past issues to see whether your idea or a similar one was previously discussed.

Before submitting a pull request, consider implementing a live example first, say using [bl.ocks.org](http://bl.ocks.org). Real-world use cases go a long way to demonstrating the usefulness of a proposed feature. The more complex a feature’s implementation, the more usefulness it should provide. Share your demo using the #d3js tag on Twitter or by sending it to the d3-js Google group.

If your proposed feature does not involve changing core functionality, consider submitting it instead as a [D3 plugin](https://github.com/d3/d3-plugins). New core features should be for general use, whereas plugins are suitable for more specialized use cases. When in doubt, it’s easier to start with a plugin before “graduating” to core.

To contribute new documentation or add examples to the gallery, just [edit the Wiki](https://github.com/mbostock/d3/wiki)!

## How to Submit a Pull Request

1. Click the “Fork” button to create your personal fork of the D3 repository.

2. After cloning your fork of the D3 repository in the terminal, run `npm install` to install D3’s dependencies.

3. Create a new branch for your new feature. For example: `git checkout -b my-awesome-feature`. A dedicated branch for your pull request means you can develop multiple features at the same time, and ensures that your pull request is stable even if you later decide to develop an unrelated feature.

4. The `d3.js` and `d3.min.js` files are built from source files in the `src` directory. _Do not edit `d3.js` directly._ Instead, edit the source files, and then run `make` to build the generated files.

5. Use `make test` to run tests and verify your changes. If you are adding a new feature, you should add new tests! If you are changing existing functionality, make sure the existing tests run, or update them as appropriate.

6. Sign D3’s [Individual Contributor License Agreement](https://docs.google.com/forms/d/1CzjdBKtDuA8WeuFJinadx956xLQ4Xriv7-oDvXnZMaI/viewform). Unless you are submitting a trivial patch (such as fixing a typo), this form is needed to verify that you are able to contribute.

7. Submit your pull request, and good luck!

=====================================================
== File: /Users/mattmann/drat/deploy/data/jobs/rat/1501373441424/input/fd4342f0e1cc47ef3222d5db12807438-README.md
=====================================================
Distributed Release Audit Tool (DRAT)
====

A distributed, parallelized (Map Reduce) wrapper around [Apache&trade; RAT](http://creadur.apache.org/rat/) (Release Audit Tool). RAT is used to check for proper licensing in software projects. However, RAT takes a prohibitively long time to analyze large repositories of code, since it can only run on one JVM. Furthermore, RAT isn't customizable by file type or file size and provides no incremental output. This wrapper dramatically speeds up the process by leveraging Apache&trade; OODT to parallelize and workflow the following components:

1. Apache&trade; Solr based exploration of a CM repository (e.g., Git, SVN, etc.) and classification of that repository based on MIME type using Apache&trade; Tika.
2. A MIME partitioner that uses Apache&trade; Tika to automatically deduce and classify by file type and then partition Apache&trade; RAT jobs based on sets of 100 files per type (configurable) -- the M/R "partitioner"
3. A throttle wrapper for RAT to MIME targeted Apache&trade; RAT. -- the M/R "mapper"
4. A reducer to "combine" the produced RAT logs together into a global RAT report that can be used for stats generation. -- the M/R "reducer"

See the wiki for more information on installing and running DRAT:  
* [Installation instructions](https://github.com/chrismattmann/drat/wiki/Installation)  
* [How to run](https://github.com/chrismattmann/drat/wiki/How-to-Run)  
* [How to re-run](https://github.com/chrismattmann/drat/wiki/Re-running-DRAT)  
* [How to interact with DRAT](https://github.com/chrismattmann/drat/wiki/Interacting-with-DRAT)  
* [Vagrant setup](https://github.com/chrismattmann/drat/wiki/Vagrant)
* [Excluding files from analysis](https://github.com/chrismattmann/drat/wiki/RegEx-exclude-file)
* [Running DRAT on multiple repositories](https://github.com/chrismattmann/drat/wiki/DRAT-Sequential)
* [Running the DRAT Proteus GUI](https://github.com/chrismattmann/drat/wiki/Proteus---A-GUI-for-DRAT)

You can clone the wiki by running  
`git clone https://github.com/chrismattmann/drat.wiki.git`
 